{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adjse\\\\Google Drive\\\\MIT xPRO\\\\Week 13\\\\build-a-formik-form_starter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFormik, validateYupSchema } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: ''\n    },\n    onSubmit: values => {\n      console.log('form', values);\n    },\n    validate: values => {\n      let errors = {};\n\n      if (!values.email) {\n        errors.email = 'Field Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      if (!values.password) errors.password = 'Field Required';\n      return errors;\n    }\n  }); // TODO: add a const called formik assigned to useFormik()\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 32\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/adjse/Google Drive/MIT xPRO/Week 13/build-a-formik-form_starter/src/App.js"],"names":["React","useFormik","validateYupSchema","App","formik","initialValues","name","email","password","onSubmit","values","console","log","validate","errors","test","handleSubmit","handleChange","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,iBAAnB,QAA2C,QAA3C;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAGH,SAAS,CAAC;AACvBI,IAAAA,aAAa,EAAE;AACbC,MAAAA,IAAI,EAAE,EADO;AAEbC,MAAAA,KAAK,EAAE,EAFM;AAGbC,MAAAA,QAAQ,EAAE;AAHG,KADQ;AAMvBC,IAAAA,QAAQ,EAAEC,MAAM,IAAG;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,MAApB;AACD,KARsB;AASvBG,IAAAA,QAAQ,EAAEH,MAAM,IAAI;AAClB,UAAII,MAAM,GAAG,EAAb;;AACA,UAAI,CAACJ,MAAM,CAACH,KAAZ,EAAmB;AACjBO,QAAAA,MAAM,CAACP,KAAP,GAAe,gBAAf;AACD,OAFD,MAEO,IAAI,CAAC,4CAA4CQ,IAA5C,CAAiDL,MAAM,CAACH,KAAxD,CAAL,EAAqE;AAC1EO,QAAAA,MAAM,CAACP,KAAP,GAAe,uBAAf;AACD;;AACD,UAAG,CAACG,MAAM,CAACF,QAAX,EAAqBM,MAAM,CAACN,QAAP,GAAkB,gBAAlB;AACrB,aAAOM,MAAP;AACD;AAlBsB,GAAD,CAAxB,CADa,CAqBb;;AAEA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEV,MAAM,CAACY,YAAvB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,MAAzB;AAAgC,QAAA,QAAQ,EAAEZ,MAAM,CAACa,YAAjD;AAA+D,QAAA,KAAK,EAAEb,MAAM,CAACM,MAAP,CAAcH;AAApF;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGH,MAAM,CAACU,MAAP,CAAcP,KAAd,gBAAsB;AAAK,QAAA,KAAK,EAAE;AAACW,UAAAA,KAAK,EAAC;AAAP,SAAZ;AAAA,kBAA4Bd,MAAM,CAACU,MAAP,CAAcP;AAA1C;AAAA;AAAA;AAAA;AAAA,cAAtB,GAA8E,IAHjF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,MAA5B;AAAmC,QAAA,QAAQ,EAAEH,MAAM,CAACa,YAApD;AAAkE,QAAA,KAAK,EAAEb,MAAM,CAACM,MAAP,CAAcF;AAAvF;AAAA;AAAA;AAAA;AAAA,cALF,EAMGJ,MAAM,CAACU,MAAP,CAAcN,QAAd,gBAAyB;AAAK,QAAA,KAAK,EAAE;AAACU,UAAAA,KAAK,EAAC;AAAP,SAAZ;AAAA,kBAA4Bd,MAAM,CAACU,MAAP,CAAcN;AAA1C;AAAA;AAAA;AAAA;AAAA,cAAzB,GAAoF,IANvF,eAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GApCQL,G;UACQF,S;;;KADRE,G;AAsCT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport {useFormik, validateYupSchema} from 'formik'\n\n\nfunction App() {\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: ''\n    },\n    onSubmit: values =>{\n      console.log('form', values);\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.email) {\n        errors.email = 'Field Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n      if(!values.password) errors.password = 'Field Required';\n      return errors;\n    }\n  })\n  // TODO: add a const called formik assigned to useFormik()\n\n  return (\n    <div >\n      <form onSubmit={formik.handleSubmit}>\n        <div>Email</div>\n        <input name='email' type=\"text\" onChange={formik.handleChange} value={formik.values.email}/>\n        {formik.errors.email ? <div style={{color:'red'}}>{formik.errors.email}</div>: null}\n        <div>Password</div>\n        <input name='password' type='text' onChange={formik.handleChange} value={formik.values.password}/>\n        {formik.errors.password ? <div style={{color:'red'}}>{formik.errors.password}</div>: null}\n        <button type='submit'>Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}