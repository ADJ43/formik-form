{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adjse\\\\Google Drive\\\\MIT xPRO\\\\Week 13\\\\build-a-formik-form_starter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFormik, validateYupSchema } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: ''\n    },\n    onSubmit: values => {\n      console.log('form', values);\n    },\n    validate: values => {\n      let errors = {};\n\n      if (!values.emailField) {\n        errors.emailF = 'Field Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      if (!values.password) errors.password = 'Field Required';\n      return errors;\n    }\n  }); // TODO: add a const called formik assigned to useFormik()\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"emailField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailError\",\n        children: [\" \", formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'red'\n          },\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 54\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"pswField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pswError\",\n        children: formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'red'\n          },\n          children: formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 54\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submitBtn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/adjse/Google Drive/MIT xPRO/Week 13/build-a-formik-form_starter/src/App.js"],"names":["React","useFormik","validateYupSchema","App","formik","initialValues","emailField","pswField","onSubmit","values","console","log","validate","errors","emailF","test","email","password","handleSubmit","handleChange","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,iBAAnB,QAA2C,QAA3C;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAGH,SAAS,CAAC;AACvBI,IAAAA,aAAa,EAAE;AACbC,MAAAA,UAAU,EAAE,EADC;AAEbC,MAAAA,QAAQ,EAAE;AAFG,KADQ;AAKvBC,IAAAA,QAAQ,EAAEC,MAAM,IAAG;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,MAApB;AACD,KAPsB;AAQvBG,IAAAA,QAAQ,EAAEH,MAAM,IAAI;AAClB,UAAII,MAAM,GAAG,EAAb;;AACA,UAAI,CAACJ,MAAM,CAACH,UAAZ,EAAwB;AACtBO,QAAAA,MAAM,CAACC,MAAP,GAAgB,gBAAhB;AACD,OAFD,MAEO,IAAI,CAAC,4CAA4CC,IAA5C,CAAiDN,MAAM,CAACO,KAAxD,CAAL,EAAqE;AAC1EH,QAAAA,MAAM,CAACG,KAAP,GAAe,uBAAf;AACD;;AACD,UAAG,CAACP,MAAM,CAACQ,QAAX,EAAqBJ,MAAM,CAACI,QAAP,GAAkB,gBAAlB;AACrB,aAAOJ,MAAP;AACD;AAjBsB,GAAD,CAAxB,CADa,CAoBb;;AAEA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAET,MAAM,CAACc,YAAvB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,IAAI,EAAC,MAA9B;AAAqC,QAAA,QAAQ,EAAEd,MAAM,CAACe,YAAtD;AAAoE,QAAA,KAAK,EAAEf,MAAM,CAACK,MAAP,CAAcO;AAAzF;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,EAAE,EAAC,YAAR;AAAA,wBAAuBZ,MAAM,CAACS,MAAP,CAAcG,KAAd,gBAAsB;AAAK,UAAA,KAAK,EAAE;AAACI,YAAAA,KAAK,EAAC;AAAP,WAAZ;AAAA,oBAA4BhB,MAAM,CAACS,MAAP,CAAcG;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAAtB,GAA8E,IAArG;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,MAA5B;AAAmC,QAAA,QAAQ,EAAEZ,MAAM,CAACe,YAApD;AAAkE,QAAA,KAAK,EAAEf,MAAM,CAACK,MAAP,CAAcQ;AAAvF;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAK,QAAA,EAAE,EAAC,UAAR;AAAA,kBAAoBb,MAAM,CAACS,MAAP,CAAcI,QAAd,gBAAyB;AAAK,UAAA,KAAK,EAAE;AAACG,YAAAA,KAAK,EAAC;AAAP,WAAZ;AAAA,oBAA4BhB,MAAM,CAACS,MAAP,CAAcI;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAAzB,GAAoF;AAAxG;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,IAAI,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAnCQd,G;UACQF,S;;;KADRE,G;AAqCT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport {useFormik, validateYupSchema} from 'formik'\n\n\nfunction App() {\n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: ''\n    },\n    onSubmit: values =>{\n      console.log('form', values);\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.emailField) {\n        errors.emailF = 'Field Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n      if(!values.password) errors.password = 'Field Required';\n      return errors;\n    }\n  })\n  // TODO: add a const called formik assigned to useFormik()\n\n  return (\n    <div >\n      <form onSubmit={formik.handleSubmit}>\n        <div>Email</div>\n        <input name='emailField' type=\"text\" onChange={formik.handleChange} value={formik.values.email}/>\n        <div id='emailError'> {formik.errors.email ? <div style={{color:'red'}}>{formik.errors.email}</div>: null}</div>\n        <div>Password</div>\n        <input name='pswField' type='text' onChange={formik.handleChange} value={formik.values.password}/>\n        <div id=\"pswError\">{formik.errors.password ? <div style={{color:'red'}}>{formik.errors.password}</div>: null}</div>\n        <button id=\"submitBtn\" type='submit'>Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}